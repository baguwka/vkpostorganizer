<Application x:Class="vk.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:vk.Converter"
             xmlns:local="clr-namespace:vk"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <Application.Resources>

        <converters:PostMarkToColorConverter x:Key="PostMarkToColorConverter"/>
        <converters:MissingPostIsHiddenConverter x:Key="MissingPostIsHiddenConverter"/>
        <converters:MissingPostIsShowingConverter x:Key="MissingPostIsShowingConverter"/>
        <converters:PostTypeToBoolConverter x:Key="PostTypeToBoolConverter"/>
        <converters:BoolToVisibilityHiddenConverter x:Key="BoolToVisibilityConverterHide"/>
        <converters:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BoolToVisibilityNegativeCollapsedConverter x:Key="BoolToVisibilityNegativeConverter"/>



        <Style TargetType="{x:Type ProgressBar}" x:Key="VkProgressBar">
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,0" StartPoint="32,8" 
                     MappingMode="Absolute" SpreadMethod="Repeat">
                        <GradientStop Color="#6B8DB3" Offset="0" />
                        <GradientStop Color="#6B8DB3" Offset="0.5" />
                        <GradientStop Color="#557AA4" Offset="0.5" />
                        <GradientStop Color="#557AA4" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="#CFDAE5"></Setter>

        </Style>

        <Style TargetType="{x:Type xctk:IntegerUpDown}" x:Key="VkIntegerUpDown">
            <Setter Property="BorderBrush" Value="#d7d8db"></Setter>
            <Setter Property="Foreground" Value="#4a7198"></Setter>
        </Style>

        <Style TargetType="{x:Type CheckBox}" x:Key="VkCheckBox">
            <Setter Property="BorderBrush" Value="#5E81A8"></Setter>
            <Setter Property="Foreground" Value="#4a7198"></Setter>
        </Style>

        <Style TargetType="{x:Type Separator}" x:Key="VkSeparator">
            <Setter Property="Background" Value="#4a7198"></Setter>
        </Style>

        <Style TargetType="{x:Type Label}" x:Key="VkLabel">
            <Setter Property="Foreground" Value="#4a7198"></Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="VkTextBox">
            <Setter Property="Foreground" Value="#4a7198"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="#d7d8db"></Setter>
        </Style>

        <Style TargetType="{x:Type ListBox}" x:Key="VkListBox">
            <Setter Property="Foreground" Value="#4a7198"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="#d7d8db"></Setter>
        </Style>
        
        
        <!-- Flat ComboBox by https://gist.github.com/hansmaad/9187633 -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="#4a7198"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->


        <Style TargetType="{x:Type Border}" x:Key="VkBorder">
            <Setter Property="Background" Value="#ffffff"></Setter>
            <Setter Property="BorderBrush" Value="#d7d8db"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="CornerRadius" Value="4"></Setter>
        </Style>

        
        <Style TargetType="{x:Type Button}" x:Key="VkMimic">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5E81A8" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>-->

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#6888AD" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="VkToggleCommon">
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="Foreground" Value="#4a7198"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="2" BorderBrush="#357ebd" BorderThickness="0" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#4a7198"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>
                            
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="#ffffff"></Setter>
                                <Setter Property="Foreground" Value="#4a7198"></Setter>
                            </Trigger>
                            
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e5ebf1"></Setter>
                                <Setter Property="Foreground" Value="#4a7198"></Setter>
                            </Trigger>-->

                            <!--<Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#dae2ea"></Setter>
                                <Setter Property="Foreground" Value="#4a7198"></Setter>
                            </Trigger>-->

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#DCE0E3"></Setter>
                                <Setter Property="Foreground" Value="#868E96"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="VkCommon">
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="Foreground" Value="#4a7198"/>
            <Setter Property="Cursor" Value="Hand"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#357ebd" BorderThickness="0" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#e5ebf1"></Setter>
                                <Setter Property="Foreground" Value="#4a7198"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#dae2ea"></Setter>
                                <Setter Property="Foreground" Value="#4a7198"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#DCE0E3"></Setter>
                                <Setter Property="Foreground" Value="#868E96"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="VkDanger" BasedOn="{StaticResource VkCommon}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#357ebd" BorderThickness="0" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#d9534f"></Setter>
                                <Setter Property="Foreground" Value="#f9f9f9"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#DF342F"></Setter>
                                <Setter Property="Foreground" Value="#f9f9f9"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#DCE0E3"></Setter>
                                <Setter Property="Foreground" Value="#868E96"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="VkBlue" BasedOn="{StaticResource VkCommon}">
            <Setter Property="Background" Value="#5E81A8"></Setter>
            <Setter Property="Foreground" Value="#ffffff"></Setter>
            <Setter Property="BorderBrush" Value="#5E81A8"></Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#6888AD"></Setter>
                                <Setter Property="Background" Value="#6888AD"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#5779A1"></Setter>
                                <Setter Property="Background" Value="#5779A1"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#D2D2D2"></Setter>
                                <Setter Property="Background" Value="#D2D2D2"></Setter>
                                <Setter Property="Foreground" Value="#3D3D3D"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        
        
        
        
        
        <Style TargetType="{x:Type Button}" x:Key="ButtonPrimary">
            <Setter Property="Background" Value="#428bca"></Setter>
            <Setter Property="Foreground" Value="#ffffff"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#357ebd" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#285e8e"></Setter>
                                <Setter Property="Background" Value="#3071a9"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#357ebd"></Setter>
                                <Setter Property="Background" Value="#428bca"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#6D97BB"></Setter>
                                <Setter Property="Background" Value="#8AADCA"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type Button}" x:Key="ButtonInfo" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Background" Value="#5bc0de"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#46b8da" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#269abc"></Setter>
                                <Setter Property="Background" Value="#31b0d5"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#46b8da"></Setter>
                                <Setter Property="Background" Value="#5bc0de"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#7E959B"></Setter>
                                <Setter Property="Background" Value="#8CA7AF"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ButtonSuccess" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Background" Value="#5cb85c"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#4cae4c" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#398439"></Setter>
                                <Setter Property="Background" Value="#449d44"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#4cae4c"></Setter>
                                <Setter Property="Background" Value="#5cb85c"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#587058"></Setter>
                                <Setter Property="Background" Value="#5E745E"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ButtonWarning" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Background" Value="#f0ad4e"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#eea236" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#d58512"></Setter>
                                <Setter Property="Background" Value="#ec971f"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#eea236"></Setter>
                                <Setter Property="Background" Value="#f0ad4e"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#9B9182"></Setter>
                                <Setter Property="Background" Value="#958B7C"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ButtonDanger" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Background" Value="#d9534f"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="2" BorderBrush="#d43f3a" BorderThickness="1" Background="{TemplateBinding Background}">
                            <Grid>
                                <TextBlock x:Name="MyContentPresenter" Text="{TemplateBinding Content}"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#ac2925"></Setter>
                                <Setter Property="Background" Value="#c9302c"></Setter>
                                <Setter Property="Foreground" Value="#ffffff"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="#d43f3a"></Setter>
                                <Setter Property="Background" Value="#d9534f"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" Value="#846B6A"></Setter>
                                <Setter Property="Background" Value="#8C7B7B"></Setter>
                                <Setter Property="Foreground" Value="#efefef"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>
